# tp5输出$_POST请求
  1.dump($_POST);
  2.dump(input('post.'));
  3.dump(request()->post());
 
# 自动验证
  1.控制器中$validate = validate('XXX'), XXX为validate文件夹中的一个验证类库.
  2.XXX继承Validate.
  3.配置protected $rule = [ ['id','number'], ['name', 'require'], ...].
  4.控制器验证, $validate->check($data); if(false) $this->error($validate->getError());

# 模型中添加数据
  1.model/xxx名称与数据表名称一致。
  2.$this->save($data)完成数据添加。
  3.申明 protected $autoWriteTimestamp = true;可自动写入时间戳
  
# 查询数据
  1.控制器中调用$data = model('Category')->getAllData();
 
# 分页
  1.模型中$this->select()改为$this->paginate(x).x为一页多少条数据
  2.模板中添加 {$category->render()} 
  3.修改样式

# ajax返回
  内置 $this->result('data', 'code', 'msg') 函数，返回json格式.

# 封装百度地图函数
  1.根目录extend中，创建Map.php.其中，使用 cinfig('xx.xxx') ，可以调用 app/extra/xx 中定义的xxx
  2.在common.php中封装 doCurl($address) 函数.返回JSON格式地址.
  3.控制器中调用方法：\Map::getLngLat('北京华天大厦').
 
# 封装邮件发送
  1.根目录extend中，导入phpmailer.
  2.app目录中extra添加email.php配置文件
  3.控制器 \phpmailer\Email::send() 调用发送文件.
 
# 联动
  1.选择框change function 向api发送ajax.
  2.根据返回的json数据，做相应操作.
 
# 图片上传封装
  1.使用uploadify插件.
  2.在image.js中配置uploadify参数
  3.api/image/upload 方法中调用think\Request
  4.调用$info = Request::instance()->file('file')获取文件信息
  5.$info->move('目录名称');
  6.$info->getPathname()获取上传路径.如果上传成功，则进行回掉操作.
